# streamlit_app.py - VERS√ÉO LEVE E FUNCIONAL

import streamlit as st
import requests
import json
import cohere
import gspread
from PIL import Image
import time
import re
import pandas as pd
from datetime import datetime
from io import BytesIO
from dateutil.relativedelta import relativedelta
from pdf2image import convert_from_bytes

# --- CONFIGURA√á√ïES E CLIENTES (INICIALIZA√á√ÉO) ---
# Tenta inicializar os clientes uma √∫nica vez
try:
    cohere_client = cohere.Client(st.secrets["COHERE_API_KEY"])
except Exception as e:
    st.error(f"Erro ao inicializar o cliente Cohere: {e}")
    cohere_client = None

# --- MOTOR DE REGRAS: CALEND√ÅRIO NACIONAL DE IMUNIZA√á√ïES (PNI) ---
CALENDARIO_PNI = [
    {"vacina": "BCG", "dose": "Dose √önica", "idade_meses": 0, "detalhe": "Protege contra formas graves de tuberculose."},
    {"vacina": "Hepatite B", "dose": "1¬™ Dose", "idade_meses": 0, "detalhe": "Primeira dose, preferencialmente nas primeiras 12-24 horas de vida."},
    {"vacina": "Pentavalente", "dose": "1¬™ Dose", "idade_meses": 2, "detalhe": "Protege contra Difteria, T√©tano, Coqueluche, Hepatite B e Haemophilus influenzae B."},
    {"vacina": "VIP (Poliomielite inativada)", "dose": "1¬™ Dose", "idade_meses": 2, "detalhe": "Protege contra a poliomielite."},
    {"vacina": "Pneumoc√≥cica 10V", "dose": "1¬™ Dose", "idade_meses": 2, "detalhe": "Protege contra doen√ßas pneumoc√≥cicas."},
    {"vacina": "Rotav√≠rus", "dose": "1¬™ Dose", "idade_meses": 2, "detalhe": "Idade m√°xima para iniciar o esquema: 3 meses e 15 dias."},
    {"vacina": "Meningoc√≥cica C", "dose": "1¬™ Dose", "idade_meses": 3, "detalhe": "Protege contra a meningite C."},
    {"vacina": "Pentavalente", "dose": "2¬™ Dose", "idade_meses": 4, "detalhe": "Refor√ßo da prote√ß√£o."},
    {"vacina": "VIP (Poliomielite inativada)", "dose": "2¬™ Dose", "idade_meses": 4, "detalhe": "Refor√ßo da prote√ß√£o."},
    {"vacina": "Pneumoc√≥cica 10V", "dose": "2¬™ Dose", "idade_meses": 4, "detalhe": "Refor√ßo da prote√ß√£o."},
    {"vacina": "Rotav√≠rus", "dose": "2¬™ Dose", "idade_meses": 4, "detalhe": "Idade m√°xima para a √∫ltima dose: 7 meses e 29 dias."},
    {"vacina": "Meningoc√≥cica C", "dose": "2¬™ Dose", "idade_meses": 5, "detalhe": "Refor√ßo da prote√ß√£o."},
    {"vacina": "Pentavalente", "dose": "3¬™ Dose", "idade_meses": 6, "detalhe": "Finaliza√ß√£o do esquema prim√°rio."},
    {"vacina": "VIP (Poliomielite inativada)", "dose": "3¬™ Dose", "idade_meses": 6, "detalhe": "Finaliza√ß√£o do esquema prim√°rio."},
    {"vacina": "Febre Amarela", "dose": "Dose Inicial", "idade_meses": 9, "detalhe": "Prote√ß√£o contra a febre amarela. Refor√ßo aos 4 anos."},
    {"vacina": "Tr√≠plice Viral", "dose": "1¬™ Dose", "idade_meses": 12, "detalhe": "Protege contra Sarampo, Caxumba e Rub√©ola."},
    {"vacina": "Pneumoc√≥cica 10V", "dose": "Refor√ßo", "idade_meses": 12, "detalhe": "Dose de refor√ßo."},
    {"vacina": "Meningoc√≥cica C", "dose": "Refor√ßo", "idade_meses": 12, "detalhe": "Dose de refor√ßo."},
]

# --- FUN√á√ïES ---
# (Aqui entram todas as suas fun√ß√µes originais que N√ÉO dependem de reportlab, matplotlib, etc.)
def analisar_carteira_vacinacao(data_nascimento_str, vacinas_administradas):
    try:
        data_nascimento = datetime.strptime(data_nascimento_str, "%d/%m/%Y")
    except ValueError:
        return {"erro": "Formato da data de nascimento inv√°lido. Utilize DD/MM/AAAA."}
    hoje = datetime.now()
    idade = relativedelta(hoje, data_nascimento)
    idade_total_meses = idade.years * 12 + idade.months
    vacinas_tomadas_set = {(v['vacina'], v['dose']) for v in vacinas_administradas}
    relatorio = {"em_dia": [], "em_atraso": [], "proximas_doses": []}
    for regra in CALENDARIO_PNI:
        vacina_requerida = (regra['vacina'], regra['dose'])
        idade_recomendada_meses = regra['idade_meses']
        if idade_total_meses >= idade_recomendada_meses:
            if vacina_requerida in vacinas_tomadas_set:
                relatorio["em_dia"].append(regra)
            else:
                relatorio["em_atraso"].append(regra)
        else:
            relatorio["proximas_doses"].append(regra)
    return relatorio

# ... Adicione aqui as suas outras fun√ß√µes como validar_cpf, ocr_space_api, extrair_dados_com_cohere, etc.

# --- INTERFACE PRINCIPAL ---
def main():
    st.set_page_config(page_title="Coleta Inteligente", page_icon="ü§ñ", layout="wide")
    st.title("Coleta Inteligente - Vers√£o Funcional")

    st.info("Bem-vindo! Esta √© a vers√£o funcional da aplica√ß√£o, com o m√≥dulo de relat√≥rios desativado para economizar mem√≥ria.")

    # Exemplo de como a sua interface pode come√ßar
    st.header("An√°lise de Carteira de Vacina√ß√£o")
    
    if cohere_client is None:
        st.error("Cliente Cohere n√£o inicializado. Verifique os segredos.")
        return

    data_nasc = st.text_input("Data de Nascimento da Crian√ßa (DD/MM/AAAA)", "01/01/2024")
    if st.button("Analisar Carteira (Exemplo)"):
        # Exemplo sem vacinas administradas
        relatorio = analisar_carteira_vacinacao(data_nasc, [])
        if "erro" in relatorio:
            st.error(relatorio["erro"])
        else:
            st.subheader("Status Vacinal")
            
            st.write("**Vacinas em Atraso:**")
            if relatorio["em_atraso"]:
                for vacina in relatorio["em_atraso"]:
                    st.warning(f"- **{vacina['vacina']} ({vacina['dose']})**: {vacina['detalhe']}")
            else:
                st.write("Nenhuma vacina em atraso.")

            st.write("**Pr√≥ximas Doses Recomendadas:**")
            if relatorio["proximas_doses"]:
                for vacina in relatorio["proximas_doses"]:
                    st.info(f"- **{vacina['vacina']} ({vacina['dose']})**: Recomendada aos {vacina['idade_meses']} meses.")
            else:
                st.write("Esquema vacinal completo para a idade.")

if __name__ == "__main__":
    main()
